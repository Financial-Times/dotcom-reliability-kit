version: 2.1

orbs:
  node: circleci/node@4.6.0

references:
  #
  # Workspace
  #
  container_config_node:
    &container_config_node
    working_directory: ~/project/build
    docker:
      - image: cimg/node:<< parameters.node-version >>
    parameters:
      node-version:
        default: "16.17" # We default to the highest active LTS
        type: string

  workspace_root: &workspace_root ~/project

  attach_workspace:
    &attach_workspace
    attach_workspace:
      at: *workspace_root

  #
  # Cache creation
  #
  create_cache:
    &create_cache
    save_cache:
      key: cache-v1-{{ .Branch }}-{{ checksum "./package.json" }}
      paths:
        - ./node_modules/

  #
  # Cache restoration
  #
  restore_cache:
    &restore_cache
    restore_cache:
      keys:
        - cache-v1-{{ .Branch }}-{{ checksum "./package.json" }}

  #
  # Filters
  #
  filters_only_main:
    &filters_only_main
    branches:
      only:
        - main

  filters_release_build:
    &filters_release_build
    tags:
      only:
        - /^[\w-]+-v\d+\.\d+\.\d+$/
    branches:
      ignore: /.*/

  filters_prerelease_build:
    &filters_prerelease_build
    tags:
      only:
        - /^[\w-]+-v\d+\.\d+\.\d+(?:-\w+\.\d+)$/
    branches:
      ignore: /.*/

jobs:

  build:
    <<: *container_config_node
    steps:
      - checkout
      - *restore_cache
      - node/install-npm:
          version: '8'
      - run:
          name: Install project dependencies
          command: npm install
      - *create_cache
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  lint:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Run ESLint
          command: npm run lint

  test:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Run package tests
          command: npm run test

  release-please:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Update release-please release PR
          command: npx release-please release-pr
            --token=${RELEASE_PLEASE_GITHUB_TOKEN}
            --repo-url=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
      - run:
          name: Release any unreleased PR merges
          command: npx release-please github-release
            --token=${RELEASE_PLEASE_GITHUB_TOKEN}
            --repo-url=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
            --monorepo-tags

  publish:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Set npm auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >
            ${HOME}/.npmrc
      - run:
          name: Build packages
          command: npm run build
      - run:
          name: NPM publish
          command: ./scripts/circleci-publish.sh

  prepublish:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Set npm auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >
            ${HOME}/.npmrc
      - run:
          name: Build packages
          command: npm run build
      - run:
          name: NPM publish
          command: ./scripts/circleci-publish.sh --tag=prerelease

workflows:
  version: 2

  build-test:
    jobs:
      - build:
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - test:
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - lint:
          requires:
            - build-v<< matrix.node-version >>
          name: lint-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - release-please:
          filters:
            <<: *filters_only_main
          requires:
            # We release on the highest active LTS version of
            # Node.js that we support
            - test-v16.17
            - lint-v16.17

  build-test-publish:
    jobs:
      - build:
          filters:
            <<: *filters_release_build
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - test:
          filters:
            <<: *filters_release_build
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - lint:
          filters:
            <<: *filters_release_build
          requires:
            - build-v<< matrix.node-version >>
          name: lint-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - publish:
          context: npm-publish-token
          filters:
            <<: *filters_release_build
          requires:
            # We release on the highest active LTS version of
            # Node.js that we support
            - lint-v16.17
            - test-v16.17

  build-test-prepublish:
    jobs:
      - build:
          filters:
            <<: *filters_prerelease_build
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - test:
          filters:
            <<: *filters_prerelease_build
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - lint:
          filters:
            <<: *filters_prerelease_build
          requires:
            - build-v<< matrix.node-version >>
          name: lint-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - prepublish:
          context: npm-publish-token
          filters:
            <<: *filters_prerelease_build
          requires:
            # We release on the highest active LTS version of
            # Node.js that we support
            - lint-v16.17
            - test-v16.17

  nightly:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            <<: *filters_only_main
    jobs:
      - build:
          context: next-nightly-build
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
      - test:
          requires:
            - build-v<< matrix.node-version >>
          context: next-nightly-build
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "18.8", "16.17", "14.20" ]
